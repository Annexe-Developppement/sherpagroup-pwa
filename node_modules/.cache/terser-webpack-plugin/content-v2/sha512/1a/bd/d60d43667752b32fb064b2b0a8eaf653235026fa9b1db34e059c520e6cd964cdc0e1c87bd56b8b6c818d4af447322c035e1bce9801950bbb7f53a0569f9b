{"map":"{\"version\":3,\"sources\":[\"56.b1f19b28599b2c885190.js\"],\"names\":[\"window\",\"push\",\"./node_modules/@magento/venia-ui/lib/util/formValidators.js\",\"module\",\"__webpack_exports__\",\"__webpack_require__\",\"eval\"],\"mappings\":\"CAACA,OAAqB,aAAIA,OAAqB,cAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7DC;;;;gLAKA,SAAUC,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK\"}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{\"./node_modules/@magento/venia-ui/lib/util/formValidators.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/@magento/venia-ui/lib/util/formValidators.js ***!\n  \\*******************************************************************/\n/*! exports provided: hasLengthAtLeast, hasLengthAtMost, hasLengthExactly, isRequired, mustBeChecked, validateRegionCode, validatePassword, isEqualToField, isNotEqualToField */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"hasLengthAtLeast\\\", function() { return hasLengthAtLeast; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"hasLengthAtMost\\\", function() { return hasLengthAtMost; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"hasLengthExactly\\\", function() { return hasLengthExactly; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isRequired\\\", function() { return isRequired; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"mustBeChecked\\\", function() { return mustBeChecked; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"validateRegionCode\\\", function() { return validateRegionCode; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"validatePassword\\\", function() { return validatePassword; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isEqualToField\\\", function() { return isEqualToField; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isNotEqualToField\\\", function() { return isNotEqualToField; });\\n/**\\n * @fileoverview This file houses functions that can be used for\\n * validation of form fields.\\n *\\n * Note that these functions should return a string error message\\n * when they fail, and `undefined` when they pass.\\n */\\nconst SUCCESS = undefined;\\nconst hasLengthAtLeast = (value, values, minimumLength) => {\\n  const message = {\\n    id: 'validation.hasLengthAtLeast',\\n    defaultMessage: 'Must contain more characters',\\n    value: minimumLength\\n  };\\n\\n  if (!value || value.length < minimumLength) {\\n    return message;\\n  }\\n\\n  return SUCCESS;\\n};\\nconst hasLengthAtMost = (value, values, maximumLength) => {\\n  if (value && value.length > maximumLength) {\\n    const message = {\\n      id: 'validation.hasLengthAtMost',\\n      defaultMessage: 'Must have less characters',\\n      value: maximumLength\\n    };\\n    return message;\\n  }\\n\\n  return SUCCESS;\\n};\\nconst hasLengthExactly = (value, values, length) => {\\n  if (value && value.length !== length) {\\n    const message = {\\n      id: 'validation.hasLengthExactly',\\n      defaultMessage: 'Does not have exact number of characters',\\n      value: length\\n    };\\n    return message;\\n  }\\n\\n  return SUCCESS;\\n};\\n/**\\n * isRequired is provided here for convenience but it is inherently ambiguous and therefore we don't recommend using it.\\n * Consider using more specific validators such as `hasLengthAtLeast` or `mustBeChecked`.\\n */\\n\\nconst isRequired = value => {\\n  const FAILURE = {\\n    id: 'validation.isRequired',\\n    defaultMessage: 'Is required.'\\n  }; // The field must have a value (no null or undefined) and\\n  // if it's a boolean, it must be `true`.\\n\\n  if (!value) return FAILURE; // If it is a number or string, it must have at least one character of input (after trim).\\n\\n  const stringValue = String(value).trim();\\n  const measureResult = hasLengthAtLeast(stringValue, null, 1);\\n  if (measureResult) return FAILURE;\\n  return SUCCESS;\\n};\\nconst mustBeChecked = value => {\\n  const message = {\\n    id: 'validation.mustBeChecked',\\n    defaultMessage: 'Must be checked.'\\n  };\\n  if (!value) return message;\\n  return SUCCESS;\\n};\\nconst validateRegionCode = (value, values, countries) => {\\n  const countryCode = \\\"US\\\";\\n  const country = countries.find(({\\n    id\\n  }) => id === countryCode);\\n\\n  if (!country) {\\n    const invalidCountry = {\\n      id: 'validation.invalidCountry',\\n      defaultMessage: `Country \\\"${countryCode}\\\" is not an available country.`,\\n      value: countryCode\\n    };\\n    return invalidCountry;\\n  }\\n\\n  const {\\n    available_regions: regions\\n  } = country;\\n\\n  if (!(Array.isArray(regions) && regions.length)) {\\n    const invalidRegions = {\\n      id: 'validation.invalidRegions',\\n      defaultMessage: `Country \\\"${countryCode}\\\" does not contain any available regions.`,\\n      value: countryCode\\n    };\\n    return invalidRegions;\\n  }\\n\\n  const region = regions.find(({\\n    code\\n  }) => code === value);\\n\\n  if (!region) {\\n    const invalidAbbrev = {\\n      id: 'validation.invalidAbbreviation',\\n      defaultMessage: 'That is not a valid state abbreviation.',\\n      value: value\\n    };\\n    return invalidAbbrev;\\n  }\\n\\n  return SUCCESS;\\n};\\nconst validatePassword = value => {\\n  const count = {\\n    lower: 0,\\n    upper: 0,\\n    digit: 0,\\n    special: 0\\n  };\\n\\n  for (const char of value) {\\n    if (/[a-z]/.test(char)) count.lower++;else if (/[A-Z]/.test(char)) count.upper++;else if (/\\\\d/.test(char)) count.digit++;else if (/\\\\S/.test(char)) count.special++;\\n  }\\n\\n  if (Object.values(count).filter(Boolean).length < 3) {\\n    const message = {\\n      id: 'validation.validatePassword',\\n      defaultMessage: 'A password must contain at least 3 of the following: lowercase, uppercase, digits, special characters.'\\n    };\\n    return message;\\n  }\\n\\n  return SUCCESS;\\n};\\nconst isEqualToField = (value, values, fieldKey) => {\\n  const message = {\\n    id: 'validation.isEqualToField',\\n    defaultMessage: 'Fields must match',\\n    value: fieldKey\\n  };\\n  return value === values[fieldKey] ? SUCCESS : message;\\n};\\nconst isNotEqualToField = (value, values, fieldKey) => {\\n  const message = {\\n    id: 'validation.isNotEqualToField',\\n    defaultMessage: 'Fields must be different',\\n    value: fieldKey\\n  };\\n  return value !== values[fieldKey] ? SUCCESS : message;\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./node_modules/@magento/venia-ui/lib/util/formValidators.js\\n\")}}]);","extractedComments":[]}