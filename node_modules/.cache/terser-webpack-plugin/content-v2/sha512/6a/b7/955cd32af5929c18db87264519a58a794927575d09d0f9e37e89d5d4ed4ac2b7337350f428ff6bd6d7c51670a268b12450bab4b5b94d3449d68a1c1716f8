{"map":"{\"version\":3,\"sources\":[\"129.a8da243cfb8d6cc8b3a2.js\"],\"names\":[\"window\",\"push\",\"./node_modules/@magento/venia-ui/lib/util/combineValidators.js\",\"module\",\"__webpack_exports__\",\"__webpack_require__\",\"eval\"],\"mappings\":\"CAACA,OAAqB,aAAIA,OAAqB,cAAK,IAAIC,KAAK,CAAC,CAAC,KAAK,CAE9DC;;;;gCAKA,SAAUC,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK\"}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{\"./node_modules/@magento/venia-ui/lib/util/combineValidators.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/@magento/venia-ui/lib/util/combineValidators.js ***!\n  \\**********************************************************************/\n/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"__webpack_require__.r(__webpack_exports__);\\n/**\\n * The function purpose is to group validation callbacks into a chain within single callback function.\\n *\\n * The single callback function should be passed as `validation` prop to an input component. It's being\\n * called by the React Controller on a form submit.\\n * The `callbacks` param is the array contains validators. Each validator should be either function or array. In case of a\\n * validator is a function it is called the same way as React Controller does, with a field `value` and a form `values` params. If\\n * the validator is an array, this means that it is extended validator which requires additional param for configuration.\\n * The first index of that array should be a extended validator function, the second index is extended param, which is needed for\\n * that function. So the function is called with three params on the form submit, with a field `value`, a form `values`\\n * and an `extended param`.\\n *\\n * Example usage of the function:\\n *\\n * <input validate={combine([\\n * foo\\n * ])} .../>\\n *\\n * foo - validation function\\n * It will be called on form submitting within chain as:\\n * `foo(value, values)`\\n *\\n * Example usage of the function with extended callback:\\n *\\n * <input validate={combine([\\n * [foo, bar]\\n * ])} .../>\\n *\\n * foo - extended validator\\n * bar - additional param\\n * It will be called on form submitting within chain as:\\n * `foo(value, values, bar)`\\n *\\n * Each callback being called one after another, according to their index in callbacks array, if one item returned the error\\n * message, validation is failed, and rest validator are not supposed to be called.\\n *\\n * @param {Array} callbacks\\n * @return {function(value, values): *}\\n */\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (callbacks => {\\n  if (callbacks == null || !Array.isArray(callbacks)) {\\n    throw new Error('Expected `callbacks` to be array.');\\n  }\\n\\n  return (value, values) => {\\n    let result = null;\\n\\n    for (let i = 0; i < callbacks.length; i++) {\\n      const callback = callbacks[i];\\n\\n      if (callback == null || !Array.isArray(callback) && typeof callback !== 'function') {\\n        throw new Error('Expected `callbacks[' + i + ']` to be array or function.');\\n      }\\n\\n      if (Array.isArray(callback)) {\\n        const [extendedCallback, extendedParam] = callback;\\n\\n        if (typeof extendedCallback !== 'function') {\\n          throw new Error('Expected `callbacks[' + i + '][0]` to be function.');\\n        }\\n\\n        result = extendedCallback(value, values, extendedParam);\\n      } else {\\n        result = callback(value, values);\\n      }\\n\\n      if (result) {\\n        break;\\n      }\\n    }\\n\\n    return result;\\n  };\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hZ2VudG8vdmVuaWEtdWkvbGliL3V0aWwvY29tYmluZVZhbGlkYXRvcnMuanM/MWQzNCJdLCJuYW1lcyI6WyJjYWxsYmFja3MiLCJBcnJheSIsImlzQXJyYXkiLCJFcnJvciIsInZhbHVlIiwidmFsdWVzIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsImNhbGxiYWNrIiwiZXh0ZW5kZWRDYWxsYmFjayIsImV4dGVuZGVkUGFyYW0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2VBLHdFQUFTLElBQUk7QUFDeEIsTUFBSUEsU0FBUyxJQUFJLElBQWIsSUFBcUIsQ0FBQ0MsS0FBSyxDQUFDQyxPQUFOLENBQWNGLFNBQWQsQ0FBMUIsRUFBb0Q7QUFDaEQsVUFBTSxJQUFJRyxLQUFKLENBQVUsbUNBQVYsQ0FBTjtBQUNIOztBQUVELFNBQU8sQ0FBQ0MsS0FBRCxFQUFRQyxNQUFSLEtBQW1CO0FBQ3RCLFFBQUlDLE1BQU0sR0FBRyxJQUFiOztBQUVBLFNBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR1AsU0FBUyxDQUFDUSxNQUE5QixFQUFzQ0QsQ0FBQyxFQUF2QyxFQUEyQztBQUN2QyxZQUFNRSxRQUFRLEdBQUdULFNBQVMsQ0FBQ08sQ0FBRCxDQUExQjs7QUFFQSxVQUNJRSxRQUFRLElBQUksSUFBWixJQUNDLENBQUNSLEtBQUssQ0FBQ0MsT0FBTixDQUFjTyxRQUFkLENBQUQsSUFBNEIsT0FBT0EsUUFBUCxLQUFvQixVQUZyRCxFQUdFO0FBQ0UsY0FBTSxJQUFJTixLQUFKLENBQ0YseUJBQXlCSSxDQUF6QixHQUE2Qiw2QkFEM0IsQ0FBTjtBQUdIOztBQUVELFVBQUlOLEtBQUssQ0FBQ0MsT0FBTixDQUFjTyxRQUFkLENBQUosRUFBNkI7QUFDekIsY0FBTSxDQUFDQyxnQkFBRCxFQUFtQkMsYUFBbkIsSUFBb0NGLFFBQTFDOztBQUVBLFlBQUksT0FBT0MsZ0JBQVAsS0FBNEIsVUFBaEMsRUFBNEM7QUFDeEMsZ0JBQU0sSUFBSVAsS0FBSixDQUNGLHlCQUF5QkksQ0FBekIsR0FBNkIsdUJBRDNCLENBQU47QUFHSDs7QUFFREQsY0FBTSxHQUFHSSxnQkFBZ0IsQ0FBQ04sS0FBRCxFQUFRQyxNQUFSLEVBQWdCTSxhQUFoQixDQUF6QjtBQUNILE9BVkQsTUFVTztBQUNITCxjQUFNLEdBQUdHLFFBQVEsQ0FBQ0wsS0FBRCxFQUFRQyxNQUFSLENBQWpCO0FBQ0g7O0FBRUQsVUFBSUMsTUFBSixFQUFZO0FBQ1I7QUFDSDtBQUNKOztBQUVELFdBQU9BLE1BQVA7QUFDSCxHQW5DRDtBQW9DSCxDQXpDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AbWFnZW50by92ZW5pYS11aS9saWIvdXRpbC9jb21iaW5lVmFsaWRhdG9ycy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGZ1bmN0aW9uIHB1cnBvc2UgaXMgdG8gZ3JvdXAgdmFsaWRhdGlvbiBjYWxsYmFja3MgaW50byBhIGNoYWluIHdpdGhpbiBzaW5nbGUgY2FsbGJhY2sgZnVuY3Rpb24uXG4gKlxuICogVGhlIHNpbmdsZSBjYWxsYmFjayBmdW5jdGlvbiBzaG91bGQgYmUgcGFzc2VkIGFzIGB2YWxpZGF0aW9uYCBwcm9wIHRvIGFuIGlucHV0IGNvbXBvbmVudC4gSXQncyBiZWluZ1xuICogY2FsbGVkIGJ5IHRoZSBSZWFjdCBDb250cm9sbGVyIG9uIGEgZm9ybSBzdWJtaXQuXG4gKiBUaGUgYGNhbGxiYWNrc2AgcGFyYW0gaXMgdGhlIGFycmF5IGNvbnRhaW5zIHZhbGlkYXRvcnMuIEVhY2ggdmFsaWRhdG9yIHNob3VsZCBiZSBlaXRoZXIgZnVuY3Rpb24gb3IgYXJyYXkuIEluIGNhc2Ugb2YgYVxuICogdmFsaWRhdG9yIGlzIGEgZnVuY3Rpb24gaXQgaXMgY2FsbGVkIHRoZSBzYW1lIHdheSBhcyBSZWFjdCBDb250cm9sbGVyIGRvZXMsIHdpdGggYSBmaWVsZCBgdmFsdWVgIGFuZCBhIGZvcm0gYHZhbHVlc2AgcGFyYW1zLiBJZlxuICogdGhlIHZhbGlkYXRvciBpcyBhbiBhcnJheSwgdGhpcyBtZWFucyB0aGF0IGl0IGlzIGV4dGVuZGVkIHZhbGlkYXRvciB3aGljaCByZXF1aXJlcyBhZGRpdGlvbmFsIHBhcmFtIGZvciBjb25maWd1cmF0aW9uLlxuICogVGhlIGZpcnN0IGluZGV4IG9mIHRoYXQgYXJyYXkgc2hvdWxkIGJlIGEgZXh0ZW5kZWQgdmFsaWRhdG9yIGZ1bmN0aW9uLCB0aGUgc2Vjb25kIGluZGV4IGlzIGV4dGVuZGVkIHBhcmFtLCB3aGljaCBpcyBuZWVkZWQgZm9yXG4gKiB0aGF0IGZ1bmN0aW9uLiBTbyB0aGUgZnVuY3Rpb24gaXMgY2FsbGVkIHdpdGggdGhyZWUgcGFyYW1zIG9uIHRoZSBmb3JtIHN1Ym1pdCwgd2l0aCBhIGZpZWxkIGB2YWx1ZWAsIGEgZm9ybSBgdmFsdWVzYFxuICogYW5kIGFuIGBleHRlbmRlZCBwYXJhbWAuXG4gKlxuICogRXhhbXBsZSB1c2FnZSBvZiB0aGUgZnVuY3Rpb246XG4gKlxuICogPGlucHV0IHZhbGlkYXRlPXtjb21iaW5lKFtcbiAqIGZvb1xuICogXSl9IC4uLi8+XG4gKlxuICogZm9vIC0gdmFsaWRhdGlvbiBmdW5jdGlvblxuICogSXQgd2lsbCBiZSBjYWxsZWQgb24gZm9ybSBzdWJtaXR0aW5nIHdpdGhpbiBjaGFpbiBhczpcbiAqIGBmb28odmFsdWUsIHZhbHVlcylgXG4gKlxuICogRXhhbXBsZSB1c2FnZSBvZiB0aGUgZnVuY3Rpb24gd2l0aCBleHRlbmRlZCBjYWxsYmFjazpcbiAqXG4gKiA8aW5wdXQgdmFsaWRhdGU9e2NvbWJpbmUoW1xuICogW2ZvbywgYmFyXVxuICogXSl9IC4uLi8+XG4gKlxuICogZm9vIC0gZXh0ZW5kZWQgdmFsaWRhdG9yXG4gKiBiYXIgLSBhZGRpdGlvbmFsIHBhcmFtXG4gKiBJdCB3aWxsIGJlIGNhbGxlZCBvbiBmb3JtIHN1Ym1pdHRpbmcgd2l0aGluIGNoYWluIGFzOlxuICogYGZvbyh2YWx1ZSwgdmFsdWVzLCBiYXIpYFxuICpcbiAqIEVhY2ggY2FsbGJhY2sgYmVpbmcgY2FsbGVkIG9uZSBhZnRlciBhbm90aGVyLCBhY2NvcmRpbmcgdG8gdGhlaXIgaW5kZXggaW4gY2FsbGJhY2tzIGFycmF5LCBpZiBvbmUgaXRlbSByZXR1cm5lZCB0aGUgZXJyb3JcbiAqIG1lc3NhZ2UsIHZhbGlkYXRpb24gaXMgZmFpbGVkLCBhbmQgcmVzdCB2YWxpZGF0b3IgYXJlIG5vdCBzdXBwb3NlZCB0byBiZSBjYWxsZWQuXG4gKlxuICogQHBhcmFtIHtBcnJheX0gY2FsbGJhY2tzXG4gKiBAcmV0dXJuIHtmdW5jdGlvbih2YWx1ZSwgdmFsdWVzKTogKn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2FsbGJhY2tzID0+IHtcbiAgICBpZiAoY2FsbGJhY2tzID09IG51bGwgfHwgIUFycmF5LmlzQXJyYXkoY2FsbGJhY2tzKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGBjYWxsYmFja3NgIHRvIGJlIGFycmF5LicpO1xuICAgIH1cblxuICAgIHJldHVybiAodmFsdWUsIHZhbHVlcykgPT4ge1xuICAgICAgICBsZXQgcmVzdWx0ID0gbnVsbDtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSBjYWxsYmFja3NbaV07XG5cbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICBjYWxsYmFjayA9PSBudWxsIHx8XG4gICAgICAgICAgICAgICAgKCFBcnJheS5pc0FycmF5KGNhbGxiYWNrKSAmJiB0eXBlb2YgY2FsbGJhY2sgIT09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICdFeHBlY3RlZCBgY2FsbGJhY2tzWycgKyBpICsgJ11gIHRvIGJlIGFycmF5IG9yIGZ1bmN0aW9uLidcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjYWxsYmFjaykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbZXh0ZW5kZWRDYWxsYmFjaywgZXh0ZW5kZWRQYXJhbV0gPSBjYWxsYmFjaztcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZXh0ZW5kZWRDYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICAgICAnRXhwZWN0ZWQgYGNhbGxiYWNrc1snICsgaSArICddWzBdYCB0byBiZSBmdW5jdGlvbi4nXG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gZXh0ZW5kZWRDYWxsYmFjayh2YWx1ZSwgdmFsdWVzLCBleHRlbmRlZFBhcmFtKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gY2FsbGJhY2sodmFsdWUsIHZhbHVlcyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./node_modules/@magento/venia-ui/lib/util/combineValidators.js\\n\")}}]);","extractedComments":[]}