{"map":"{\"version\":3,\"sources\":[\"96.709f0a13efaf31e4f5dc.js\"],\"names\":[\"window\",\"push\",\"./node_modules/@magento/peregrine/lib/talons/Country/useCountry.js\",\"module\",\"__webpack_exports__\",\"__webpack_require__\",\"eval\",\"./node_modules/@magento/peregrine/lib/talons/Region/useRegion.js\"],\"mappings\":\"CAACA,OAAqB,aAAIA,OAAqB,cAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7DC;;;;mCAKA,SAAUC,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK,ksIAICC;;;;kCAKA,SAAUJ,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK\"}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{\"./node_modules/@magento/peregrine/lib/talons/Country/useCountry.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/@magento/peregrine/lib/talons/Country/useCountry.js ***!\n  \\**************************************************************************/\n/*! exports provided: useCountry */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useCountry\", function() { return useCountry; });\\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\\nvar _s = __webpack_require__.$Refresh$.signature();\\n\\n\\nconst useCountry = props => {\\n  _s();\\n\\n  const {\\n    queries: {\\n      getCountriesQuery\\n    }\\n  } = props;\\n  const {\\n    data,\\n    error,\\n    loading\\n  } = Object(_apollo_client__WEBPACK_IMPORTED_MODULE_0__[\"useQuery\"])(getCountriesQuery);\\n  let formattedCountriesData = [{\\n    label: \\'Loading Countries...\\',\\n    value: \\'\\'\\n  }];\\n\\n  if (!loading && !error) {\\n    const {\\n      countries\\n    } = data;\\n    formattedCountriesData = countries.map(country => ({\\n      // If a country is missing the full english name just show the abbreviation.\\n      label: country.full_name_english || country.two_letter_abbreviation,\\n      value: country.two_letter_abbreviation\\n    }));\\n    formattedCountriesData.sort((a, b) => a.label < b.label ? -1 : 1);\\n  }\\n\\n  return {\\n    countries: formattedCountriesData,\\n    loading\\n  };\\n};\\n\\n_s(useCountry, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\\n  return [_apollo_client__WEBPACK_IMPORTED_MODULE_0__[\"useQuery\"]];\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hZ2VudG8vcGVyZWdyaW5lL2xpYi90YWxvbnMvQ291bnRyeS91c2VDb3VudHJ5LmpzPzNjMmUiXSwibmFtZXMiOlsidXNlQ291bnRyeSIsInByb3BzIiwicXVlcmllcyIsImdldENvdW50cmllc1F1ZXJ5IiwiZGF0YSIsImVycm9yIiwibG9hZGluZyIsInVzZVF1ZXJ5IiwiZm9ybWF0dGVkQ291bnRyaWVzRGF0YSIsImxhYmVsIiwidmFsdWUiLCJjb3VudHJpZXMiLCJtYXAiLCJjb3VudHJ5IiwiZnVsbF9uYW1lX2VuZ2xpc2giLCJ0d29fbGV0dGVyX2FiYnJldmlhdGlvbiIsInNvcnQiLCJhIiwiYiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUVPLE1BQU1BLFVBQVUsR0FBR0MsS0FBSyxJQUFJO0FBQUE7O0FBQy9CLFFBQU07QUFDRkMsV0FBTyxFQUFFO0FBQUVDO0FBQUY7QUFEUCxNQUVGRixLQUZKO0FBSUEsUUFBTTtBQUFFRyxRQUFGO0FBQVFDLFNBQVI7QUFBZUM7QUFBZixNQUEyQkMsK0RBQVEsQ0FBQ0osaUJBQUQsQ0FBekM7QUFFQSxNQUFJSyxzQkFBc0IsR0FBRyxDQUFDO0FBQUVDLFNBQUssRUFBRSxzQkFBVDtBQUFpQ0MsU0FBSyxFQUFFO0FBQXhDLEdBQUQsQ0FBN0I7O0FBQ0EsTUFBSSxDQUFDSixPQUFELElBQVksQ0FBQ0QsS0FBakIsRUFBd0I7QUFDcEIsVUFBTTtBQUFFTTtBQUFGLFFBQWdCUCxJQUF0QjtBQUNBSSwwQkFBc0IsR0FBR0csU0FBUyxDQUFDQyxHQUFWLENBQWNDLE9BQU8sS0FBSztBQUMvQztBQUNBSixXQUFLLEVBQUVJLE9BQU8sQ0FBQ0MsaUJBQVIsSUFBNkJELE9BQU8sQ0FBQ0UsdUJBRkc7QUFHL0NMLFdBQUssRUFBRUcsT0FBTyxDQUFDRTtBQUhnQyxLQUFMLENBQXJCLENBQXpCO0FBS0FQLDBCQUFzQixDQUFDUSxJQUF2QixDQUE0QixDQUFDQyxDQUFELEVBQUlDLENBQUosS0FBV0QsQ0FBQyxDQUFDUixLQUFGLEdBQVVTLENBQUMsQ0FBQ1QsS0FBWixHQUFvQixDQUFDLENBQXJCLEdBQXlCLENBQWhFO0FBQ0g7O0FBRUQsU0FBTztBQUNIRSxhQUFTLEVBQUVILHNCQURSO0FBRUhGO0FBRkcsR0FBUDtBQUlILENBdEJNOztHQUFNTixVO1VBS3dCTyx1RCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AbWFnZW50by9wZXJlZ3JpbmUvbGliL3RhbG9ucy9Db3VudHJ5L3VzZUNvdW50cnkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gJ0BhcG9sbG8vY2xpZW50JztcblxuZXhwb3J0IGNvbnN0IHVzZUNvdW50cnkgPSBwcm9wcyA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICBxdWVyaWVzOiB7IGdldENvdW50cmllc1F1ZXJ5IH1cbiAgICB9ID0gcHJvcHM7XG5cbiAgICBjb25zdCB7IGRhdGEsIGVycm9yLCBsb2FkaW5nIH0gPSB1c2VRdWVyeShnZXRDb3VudHJpZXNRdWVyeSk7XG5cbiAgICBsZXQgZm9ybWF0dGVkQ291bnRyaWVzRGF0YSA9IFt7IGxhYmVsOiAnTG9hZGluZyBDb3VudHJpZXMuLi4nLCB2YWx1ZTogJycgfV07XG4gICAgaWYgKCFsb2FkaW5nICYmICFlcnJvcikge1xuICAgICAgICBjb25zdCB7IGNvdW50cmllcyB9ID0gZGF0YTtcbiAgICAgICAgZm9ybWF0dGVkQ291bnRyaWVzRGF0YSA9IGNvdW50cmllcy5tYXAoY291bnRyeSA9PiAoe1xuICAgICAgICAgICAgLy8gSWYgYSBjb3VudHJ5IGlzIG1pc3NpbmcgdGhlIGZ1bGwgZW5nbGlzaCBuYW1lIGp1c3Qgc2hvdyB0aGUgYWJicmV2aWF0aW9uLlxuICAgICAgICAgICAgbGFiZWw6IGNvdW50cnkuZnVsbF9uYW1lX2VuZ2xpc2ggfHwgY291bnRyeS50d29fbGV0dGVyX2FiYnJldmlhdGlvbixcbiAgICAgICAgICAgIHZhbHVlOiBjb3VudHJ5LnR3b19sZXR0ZXJfYWJicmV2aWF0aW9uXG4gICAgICAgIH0pKTtcbiAgICAgICAgZm9ybWF0dGVkQ291bnRyaWVzRGF0YS5zb3J0KChhLCBiKSA9PiAoYS5sYWJlbCA8IGIubGFiZWwgPyAtMSA6IDEpKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBjb3VudHJpZXM6IGZvcm1hdHRlZENvdW50cmllc0RhdGEsXG4gICAgICAgIGxvYWRpbmdcbiAgICB9O1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/@magento/peregrine/lib/talons/Country/useCountry.js\\n')},\"./node_modules/@magento/peregrine/lib/talons/Region/useRegion.js\":\n/*!************************************************************************!*\\\n  !*** ./node_modules/@magento/peregrine/lib/talons/Region/useRegion.js ***!\n  \\************************************************************************/\n/*! exports provided: useRegion */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useRegion\", function() { return useRegion; });\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\\n/* harmony import */ var informed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! informed */ \"./node_modules/informed/dist/esm/index.js\");\\nvar _s = __webpack_require__.$Refresh$.signature();\\n\\n\\n\\n\\n/**\\n * The useRegion talon handles logic for:\\n *\\n *  * Resetting the region field value when the country changes.\\n *  * Querying for available regions for a country and rendering them.\\n *\\n * @param {Object} props\\n * @param {string} props.countryCodeField\\n * @param {string} props.fieldInput - the reference field path for free form text input Defaults to \"region\".\\n * @param {string} props.fieldSelect - the reference field path for selectable list of regions. Defaults to \"region\".\\n * @param {string} props.optionValueKey - the key used to get the value for the field. Defaults to \"code\"\\n * @param {GraphQLAST} props.queries.getRegionsQuery - query to fetch regions for a country.\\n *\\n * @return {RegionTalonProps}\\n */\\n\\nconst useRegion = props => {\\n  _s();\\n\\n  const {\\n    countryCodeField = \\'country\\',\\n    fieldInput = \\'region\\',\\n    fieldSelect = \\'region\\',\\n    optionValueKey = \\'code\\',\\n    queries: {\\n      getRegionsQuery\\n    }\\n  } = props;\\n  const hasInitialized = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(false);\\n  const countryFieldState = Object(informed__WEBPACK_IMPORTED_MODULE_2__[\"useFieldState\"])(countryCodeField);\\n  const {\\n    value: country\\n  } = countryFieldState;\\n  const regionInputFieldApi = Object(informed__WEBPACK_IMPORTED_MODULE_2__[\"useFieldApi\"])(fieldInput);\\n  const regionSelectFieldApi = Object(informed__WEBPACK_IMPORTED_MODULE_2__[\"useFieldApi\"])(fieldSelect); // Reset region value when country changes. Because of how Informed sets\\n  // initialValues, we want to skip the first state change of the value being\\n  // initialized.\\n\\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\\n    if (country) {\\n      if (hasInitialized.current) {\\n        regionInputFieldApi.exists() && regionInputFieldApi.reset();\\n        regionSelectFieldApi.exists() && regionSelectFieldApi.reset();\\n      } else {\\n        hasInitialized.current = true;\\n      }\\n    }\\n  }, [country, regionInputFieldApi, regionSelectFieldApi]);\\n  const {\\n    data,\\n    loading\\n  } = Object(_apollo_client__WEBPACK_IMPORTED_MODULE_1__[\"useQuery\"])(getRegionsQuery, {\\n    variables: {\\n      countryCode: country\\n    },\\n    skip: !country\\n  });\\n  let formattedRegionsData = [{\\n    label: \\'Loading Regions...\\',\\n    value: \\'\\'\\n  }];\\n\\n  if (data) {\\n    const {\\n      country\\n    } = data;\\n    const {\\n      available_regions: availableRegions\\n    } = country;\\n\\n    if (availableRegions) {\\n      formattedRegionsData = availableRegions.map(region => ({\\n        key: region.id,\\n        label: region.name,\\n        value: region[optionValueKey]\\n      }));\\n      formattedRegionsData.unshift({\\n        disabled: true,\\n        hidden: true,\\n        label: \\'\\',\\n        value: \\'\\'\\n      });\\n    } else {\\n      formattedRegionsData = [];\\n    }\\n  }\\n\\n  return {\\n    loading,\\n    regions: formattedRegionsData\\n  };\\n};\\n/** JSDocs type definitions */\\n\\n/**\\n * @typedef {Object} RegionTalonProps\\n *\\n * @property {boolean} loading whether the regions are loading\\n * @property {Array<Region>} regions array of formatted regions for the country\\n *\\n */\\n\\n/**\\n * @typedef {Object} Region\\n *\\n * @property {number} key the id of the region\\n * @property {String} label the label of the region\\n * @property {String} value the value of the region\\n */\\n\\n_s(useRegion, \"Tlw/S0Ntv5v0BKLRDtsfFVe7gP0=\", false, function () {\\n  return [informed__WEBPACK_IMPORTED_MODULE_2__[\"useFieldState\"], informed__WEBPACK_IMPORTED_MODULE_2__[\"useFieldApi\"], informed__WEBPACK_IMPORTED_MODULE_2__[\"useFieldApi\"], _apollo_client__WEBPACK_IMPORTED_MODULE_1__[\"useQuery\"]];\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQG1hZ2VudG8vcGVyZWdyaW5lL2xpYi90YWxvbnMvUmVnaW9uL3VzZVJlZ2lvbi5qcz83NzhiIl0sIm5hbWVzIjpbInVzZVJlZ2lvbiIsInByb3BzIiwiY291bnRyeUNvZGVGaWVsZCIsImZpZWxkSW5wdXQiLCJmaWVsZFNlbGVjdCIsIm9wdGlvblZhbHVlS2V5IiwicXVlcmllcyIsImdldFJlZ2lvbnNRdWVyeSIsImhhc0luaXRpYWxpemVkIiwidXNlUmVmIiwiY291bnRyeUZpZWxkU3RhdGUiLCJ1c2VGaWVsZFN0YXRlIiwidmFsdWUiLCJjb3VudHJ5IiwicmVnaW9uSW5wdXRGaWVsZEFwaSIsInVzZUZpZWxkQXBpIiwicmVnaW9uU2VsZWN0RmllbGRBcGkiLCJ1c2VFZmZlY3QiLCJjdXJyZW50IiwiZXhpc3RzIiwicmVzZXQiLCJkYXRhIiwibG9hZGluZyIsInVzZVF1ZXJ5IiwidmFyaWFibGVzIiwiY291bnRyeUNvZGUiLCJza2lwIiwiZm9ybWF0dGVkUmVnaW9uc0RhdGEiLCJsYWJlbCIsImF2YWlsYWJsZV9yZWdpb25zIiwiYXZhaWxhYmxlUmVnaW9ucyIsIm1hcCIsInJlZ2lvbiIsImtleSIsImlkIiwibmFtZSIsInVuc2hpZnQiLCJkaXNhYmxlZCIsImhpZGRlbiIsInJlZ2lvbnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNPLE1BQU1BLFNBQVMsR0FBR0MsS0FBSyxJQUFJO0FBQUE7O0FBQzlCLFFBQU07QUFDRkMsb0JBQWdCLEdBQUcsU0FEakI7QUFFRkMsY0FBVSxHQUFHLFFBRlg7QUFHRkMsZUFBVyxHQUFHLFFBSFo7QUFJRkMsa0JBQWMsR0FBRyxNQUpmO0FBS0ZDLFdBQU8sRUFBRTtBQUFFQztBQUFGO0FBTFAsTUFNRk4sS0FOSjtBQVFBLFFBQU1PLGNBQWMsR0FBR0Msb0RBQU0sQ0FBQyxLQUFELENBQTdCO0FBQ0EsUUFBTUMsaUJBQWlCLEdBQUdDLDhEQUFhLENBQUNULGdCQUFELENBQXZDO0FBQ0EsUUFBTTtBQUFFVSxTQUFLLEVBQUVDO0FBQVQsTUFBcUJILGlCQUEzQjtBQUVBLFFBQU1JLG1CQUFtQixHQUFHQyw0REFBVyxDQUFDWixVQUFELENBQXZDO0FBQ0EsUUFBTWEsb0JBQW9CLEdBQUdELDREQUFXLENBQUNYLFdBQUQsQ0FBeEMsQ0FkOEIsQ0FnQjlCO0FBQ0E7QUFDQTs7QUFDQWEseURBQVMsQ0FBQyxNQUFNO0FBQ1osUUFBSUosT0FBSixFQUFhO0FBQ1QsVUFBSUwsY0FBYyxDQUFDVSxPQUFuQixFQUE0QjtBQUN4QkosMkJBQW1CLENBQUNLLE1BQXBCLE1BQWdDTCxtQkFBbUIsQ0FBQ00sS0FBcEIsRUFBaEM7QUFDQUosNEJBQW9CLENBQUNHLE1BQXJCLE1BQWlDSCxvQkFBb0IsQ0FBQ0ksS0FBckIsRUFBakM7QUFDSCxPQUhELE1BR087QUFDSFosc0JBQWMsQ0FBQ1UsT0FBZixHQUF5QixJQUF6QjtBQUNIO0FBQ0o7QUFDSixHQVRRLEVBU04sQ0FBQ0wsT0FBRCxFQUFVQyxtQkFBVixFQUErQkUsb0JBQS9CLENBVE0sQ0FBVDtBQVdBLFFBQU07QUFBRUssUUFBRjtBQUFRQztBQUFSLE1BQW9CQywrREFBUSxDQUFDaEIsZUFBRCxFQUFrQjtBQUNoRGlCLGFBQVMsRUFBRTtBQUFFQyxpQkFBVyxFQUFFWjtBQUFmLEtBRHFDO0FBRWhEYSxRQUFJLEVBQUUsQ0FBQ2I7QUFGeUMsR0FBbEIsQ0FBbEM7QUFLQSxNQUFJYyxvQkFBb0IsR0FBRyxDQUFDO0FBQUVDLFNBQUssRUFBRSxvQkFBVDtBQUErQmhCLFNBQUssRUFBRTtBQUF0QyxHQUFELENBQTNCOztBQUNBLE1BQUlTLElBQUosRUFBVTtBQUNOLFVBQU07QUFBRVI7QUFBRixRQUFjUSxJQUFwQjtBQUNBLFVBQU07QUFBRVEsdUJBQWlCLEVBQUVDO0FBQXJCLFFBQTBDakIsT0FBaEQ7O0FBQ0EsUUFBSWlCLGdCQUFKLEVBQXNCO0FBQ2xCSCwwQkFBb0IsR0FBR0csZ0JBQWdCLENBQUNDLEdBQWpCLENBQXFCQyxNQUFNLEtBQUs7QUFDbkRDLFdBQUcsRUFBRUQsTUFBTSxDQUFDRSxFQUR1QztBQUVuRE4sYUFBSyxFQUFFSSxNQUFNLENBQUNHLElBRnFDO0FBR25EdkIsYUFBSyxFQUFFb0IsTUFBTSxDQUFDM0IsY0FBRDtBQUhzQyxPQUFMLENBQTNCLENBQXZCO0FBS0FzQiwwQkFBb0IsQ0FBQ1MsT0FBckIsQ0FBNkI7QUFDekJDLGdCQUFRLEVBQUUsSUFEZTtBQUV6QkMsY0FBTSxFQUFFLElBRmlCO0FBR3pCVixhQUFLLEVBQUUsRUFIa0I7QUFJekJoQixhQUFLLEVBQUU7QUFKa0IsT0FBN0I7QUFNSCxLQVpELE1BWU87QUFDSGUsMEJBQW9CLEdBQUcsRUFBdkI7QUFDSDtBQUNKOztBQUVELFNBQU87QUFDSEwsV0FERztBQUVIaUIsV0FBTyxFQUFFWjtBQUZOLEdBQVA7QUFJSCxDQTVETTtBQThEUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7R0E5RWEzQixTO1VBVWlCVyxzRCxFQUdFSSxvRCxFQUNDQSxvRCxFQWdCSFEsdUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hZ2VudG8vcGVyZWdyaW5lL2xpYi90YWxvbnMvUmVnaW9uL3VzZVJlZ2lvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlUXVlcnkgfSBmcm9tICdAYXBvbGxvL2NsaWVudCc7XG5pbXBvcnQgeyB1c2VGaWVsZEFwaSwgdXNlRmllbGRTdGF0ZSB9IGZyb20gJ2luZm9ybWVkJztcblxuLyoqXG4gKiBUaGUgdXNlUmVnaW9uIHRhbG9uIGhhbmRsZXMgbG9naWMgZm9yOlxuICpcbiAqICAqIFJlc2V0dGluZyB0aGUgcmVnaW9uIGZpZWxkIHZhbHVlIHdoZW4gdGhlIGNvdW50cnkgY2hhbmdlcy5cbiAqICAqIFF1ZXJ5aW5nIGZvciBhdmFpbGFibGUgcmVnaW9ucyBmb3IgYSBjb3VudHJ5IGFuZCByZW5kZXJpbmcgdGhlbS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcHJvcHNcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wcy5jb3VudHJ5Q29kZUZpZWxkXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvcHMuZmllbGRJbnB1dCAtIHRoZSByZWZlcmVuY2UgZmllbGQgcGF0aCBmb3IgZnJlZSBmb3JtIHRleHQgaW5wdXQgRGVmYXVsdHMgdG8gXCJyZWdpb25cIi5cbiAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wcy5maWVsZFNlbGVjdCAtIHRoZSByZWZlcmVuY2UgZmllbGQgcGF0aCBmb3Igc2VsZWN0YWJsZSBsaXN0IG9mIHJlZ2lvbnMuIERlZmF1bHRzIHRvIFwicmVnaW9uXCIuXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvcHMub3B0aW9uVmFsdWVLZXkgLSB0aGUga2V5IHVzZWQgdG8gZ2V0IHRoZSB2YWx1ZSBmb3IgdGhlIGZpZWxkLiBEZWZhdWx0cyB0byBcImNvZGVcIlxuICogQHBhcmFtIHtHcmFwaFFMQVNUfSBwcm9wcy5xdWVyaWVzLmdldFJlZ2lvbnNRdWVyeSAtIHF1ZXJ5IHRvIGZldGNoIHJlZ2lvbnMgZm9yIGEgY291bnRyeS5cbiAqXG4gKiBAcmV0dXJuIHtSZWdpb25UYWxvblByb3BzfVxuICovXG5leHBvcnQgY29uc3QgdXNlUmVnaW9uID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgY291bnRyeUNvZGVGaWVsZCA9ICdjb3VudHJ5JyxcbiAgICAgICAgZmllbGRJbnB1dCA9ICdyZWdpb24nLFxuICAgICAgICBmaWVsZFNlbGVjdCA9ICdyZWdpb24nLFxuICAgICAgICBvcHRpb25WYWx1ZUtleSA9ICdjb2RlJyxcbiAgICAgICAgcXVlcmllczogeyBnZXRSZWdpb25zUXVlcnkgfVxuICAgIH0gPSBwcm9wcztcblxuICAgIGNvbnN0IGhhc0luaXRpYWxpemVkID0gdXNlUmVmKGZhbHNlKTtcbiAgICBjb25zdCBjb3VudHJ5RmllbGRTdGF0ZSA9IHVzZUZpZWxkU3RhdGUoY291bnRyeUNvZGVGaWVsZCk7XG4gICAgY29uc3QgeyB2YWx1ZTogY291bnRyeSB9ID0gY291bnRyeUZpZWxkU3RhdGU7XG5cbiAgICBjb25zdCByZWdpb25JbnB1dEZpZWxkQXBpID0gdXNlRmllbGRBcGkoZmllbGRJbnB1dCk7XG4gICAgY29uc3QgcmVnaW9uU2VsZWN0RmllbGRBcGkgPSB1c2VGaWVsZEFwaShmaWVsZFNlbGVjdCk7XG5cbiAgICAvLyBSZXNldCByZWdpb24gdmFsdWUgd2hlbiBjb3VudHJ5IGNoYW5nZXMuIEJlY2F1c2Ugb2YgaG93IEluZm9ybWVkIHNldHNcbiAgICAvLyBpbml0aWFsVmFsdWVzLCB3ZSB3YW50IHRvIHNraXAgdGhlIGZpcnN0IHN0YXRlIGNoYW5nZSBvZiB0aGUgdmFsdWUgYmVpbmdcbiAgICAvLyBpbml0aWFsaXplZC5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoY291bnRyeSkge1xuICAgICAgICAgICAgaWYgKGhhc0luaXRpYWxpemVkLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICByZWdpb25JbnB1dEZpZWxkQXBpLmV4aXN0cygpICYmIHJlZ2lvbklucHV0RmllbGRBcGkucmVzZXQoKTtcbiAgICAgICAgICAgICAgICByZWdpb25TZWxlY3RGaWVsZEFwaS5leGlzdHMoKSAmJiByZWdpb25TZWxlY3RGaWVsZEFwaS5yZXNldCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBoYXNJbml0aWFsaXplZC5jdXJyZW50ID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIFtjb3VudHJ5LCByZWdpb25JbnB1dEZpZWxkQXBpLCByZWdpb25TZWxlY3RGaWVsZEFwaV0pO1xuXG4gICAgY29uc3QgeyBkYXRhLCBsb2FkaW5nIH0gPSB1c2VRdWVyeShnZXRSZWdpb25zUXVlcnksIHtcbiAgICAgICAgdmFyaWFibGVzOiB7IGNvdW50cnlDb2RlOiBjb3VudHJ5IH0sXG4gICAgICAgIHNraXA6ICFjb3VudHJ5XG4gICAgfSk7XG5cbiAgICBsZXQgZm9ybWF0dGVkUmVnaW9uc0RhdGEgPSBbeyBsYWJlbDogJ0xvYWRpbmcgUmVnaW9ucy4uLicsIHZhbHVlOiAnJyB9XTtcbiAgICBpZiAoZGF0YSkge1xuICAgICAgICBjb25zdCB7IGNvdW50cnkgfSA9IGRhdGE7XG4gICAgICAgIGNvbnN0IHsgYXZhaWxhYmxlX3JlZ2lvbnM6IGF2YWlsYWJsZVJlZ2lvbnMgfSA9IGNvdW50cnk7XG4gICAgICAgIGlmIChhdmFpbGFibGVSZWdpb25zKSB7XG4gICAgICAgICAgICBmb3JtYXR0ZWRSZWdpb25zRGF0YSA9IGF2YWlsYWJsZVJlZ2lvbnMubWFwKHJlZ2lvbiA9PiAoe1xuICAgICAgICAgICAgICAgIGtleTogcmVnaW9uLmlkLFxuICAgICAgICAgICAgICAgIGxhYmVsOiByZWdpb24ubmFtZSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogcmVnaW9uW29wdGlvblZhbHVlS2V5XVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgZm9ybWF0dGVkUmVnaW9uc0RhdGEudW5zaGlmdCh7XG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgICAgICAgICAgIGxhYmVsOiAnJyxcbiAgICAgICAgICAgICAgICB2YWx1ZTogJydcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9ybWF0dGVkUmVnaW9uc0RhdGEgPSBbXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGxvYWRpbmcsXG4gICAgICAgIHJlZ2lvbnM6IGZvcm1hdHRlZFJlZ2lvbnNEYXRhXG4gICAgfTtcbn07XG5cbi8qKiBKU0RvY3MgdHlwZSBkZWZpbml0aW9ucyAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFJlZ2lvblRhbG9uUHJvcHNcbiAqXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IGxvYWRpbmcgd2hldGhlciB0aGUgcmVnaW9ucyBhcmUgbG9hZGluZ1xuICogQHByb3BlcnR5IHtBcnJheTxSZWdpb24+fSByZWdpb25zIGFycmF5IG9mIGZvcm1hdHRlZCByZWdpb25zIGZvciB0aGUgY291bnRyeVxuICpcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtPYmplY3R9IFJlZ2lvblxuICpcbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBrZXkgdGhlIGlkIG9mIHRoZSByZWdpb25cbiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSBsYWJlbCB0aGUgbGFiZWwgb2YgdGhlIHJlZ2lvblxuICogQHByb3BlcnR5IHtTdHJpbmd9IHZhbHVlIHRoZSB2YWx1ZSBvZiB0aGUgcmVnaW9uXG4gKi9cbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./node_modules/@magento/peregrine/lib/talons/Region/useRegion.js\\n')}}]);","extractedComments":[]}