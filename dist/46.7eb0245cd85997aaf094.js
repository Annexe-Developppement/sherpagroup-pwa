(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{738:function(e,i){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"cmsBlocks"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"identifiers"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cmsBlocks"},arguments:[{kind:"Argument",name:{kind:"Name",value:"identifiers"},value:{kind:"Variable",name:{kind:"Name",value:"identifiers"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"items"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"content"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"identifier"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:163}};n.loc.source={body:"query cmsBlocks($identifiers: [String]!) {\n    cmsBlocks(identifiers: $identifiers) {\n        items {\n            content\n            identifier\n        }\n    }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var t={};function a(e,i){for(var n=0;n<e.definitions.length;n++){var t=e.definitions[n];if(t.name&&t.name.value==i)return t}}n.definitions.forEach((function(e){if(e.name){var i=new Set;!function e(i,n){if("FragmentSpread"===i.kind)n.add(i.name.value);else if("VariableDefinition"===i.kind){var t=i.type;"NamedType"===t.kind&&n.add(t.name.value)}i.selectionSet&&i.selectionSet.selections.forEach((function(i){e(i,n)})),i.variableDefinitions&&i.variableDefinitions.forEach((function(i){e(i,n)})),i.definitions&&i.definitions.forEach((function(i){e(i,n)}))}(e,i),t[e.name.value]=i}})),e.exports=n,e.exports.cmsBlocks=function(e,i){var n={kind:e.kind,definitions:[a(e,i)]};e.hasOwnProperty("loc")&&(n.loc=e.loc);var o=t[i]||new Set,d=new Set,s=new Set;for(o.forEach((function(e){s.add(e)}));s.size>0;){var r=s;s=new Set,r.forEach((function(e){d.has(e)||(d.add(e),(t[e]||new Set).forEach((function(e){s.add(e)})))}))}return d.forEach((function(i){var t=a(e,i);t&&n.definitions.push(t)})),n}(n,"cmsBlocks")}}]);